// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search Component should render correctly 1`] = `
<View
  style={
    {
      "flex": 1,
      "paddingHorizontal": 30,
      "paddingTop": 30,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 20,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="back-button"
    >
      <Text />
    </View>
    <Text
      style={
        {
          "color": "#333",
          "flex": 1,
          "fontSize": 24,
          "fontWeight": "bold",
          "textAlign": "center",
        }
      }
    >
      Search 
    </Text>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "borderColor": "#ccc",
        "borderRadius": 56,
        "borderWidth": 1,
        "flexDirection": "row",
        "marginBottom": 20,
        "paddingHorizontal": 10,
      }
    }
  >
    <TextInput
      onChangeText={[Function]}
      placeholder="Search..."
      style={
        {
          "flex": 1,
          "height": 40,
        }
      }
      testID="search-input"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "marginLeft": 10,
          "opacity": 1,
        }
      }
      testID="search-button"
    >
      <Text />
    </View>
  </View>
  <View
    style={
      {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginBottom": 20,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#08BDBD",
          "borderColor": "#08BDBD",
          "borderRadius": 7,
          "borderWidth": 1,
          "elevation": 5,
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 4,
            "width": 0,
          },
          "shadowOpacity": 0.25,
          "shadowRadius": 5.84,
        }
      }
    >
      <Text
        style={
          {
            "color": "#333",
            "fontWeight": "bold",
            "textAlign": "center",
          }
        }
      >
        Rooms
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "borderColor": "#ccc",
          "borderRadius": 7,
          "borderWidth": 1,
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          {
            "color": "#333",
            "fontWeight": "bold",
            "textAlign": "center",
          }
        }
      >
        Users
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "borderColor": "#ccc",
          "borderRadius": 7,
          "borderWidth": 1,
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
      testID="toggle-filters-button"
    >
      <Text
        style={
          {
            "color": "#333",
            "fontWeight": "bold",
            "textAlign": "center",
          }
        }
      >
        View More Filters
      </Text>
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      {
        "paddingVertical": 10,
      }
    }
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View />
  </RCTScrollView>
  <View
    collapsable={false}
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "transform": [
          {
            "translateY": 0,
          },
        ],
        "zIndex": 10,
      }
    }
  >
    <div />
  </View>
</View>
`;
