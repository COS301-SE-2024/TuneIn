// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChatScreen renders the chat screen correctly 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
      "paddingHorizontal": 10,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "borderBottomColor": "#E0E0E0",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "paddingHorizontal": 10,
        "paddingVertical": 15,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "marginRight": 16,
          "opacity": 1,
        }
      }
      testID="backButton"
    >
      <Text />
    </View>
    <Text
      style={
        {
          "fontSize": 18,
          "fontWeight": "bold",
          "marginLeft": 10,
        }
      }
    >
      Loading...
    </Text>
  </View>
  <RCTScrollView
    contentContainerStyle={
      {
        "marginHorizontal": 20,
        "paddingVertical": 10,
      }
    }
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View />
  </RCTScrollView>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderTopColor": "#E0E0E0",
        "borderTopWidth": 1,
        "flexDirection": "row",
        "paddingHorizontal": 10,
        "paddingVertical": 5,
      }
    }
  >
    <TextInput
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Message..."
      style={
        {
          "backgroundColor": "#F0F0F0",
          "borderRadius": 25,
          "flex": 1,
          "marginBottom": 10,
          "marginLeft": 10,
          "marginRight": 20,
          "marginTop": 10,
          "paddingHorizontal": 15,
          "paddingVertical": 10,
        }
      }
      testID="messageInput"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
          "padding": 10,
        }
      }
      testID="sendButton"
    >
      <Text />
    </View>
  </View>
</View>
`;
