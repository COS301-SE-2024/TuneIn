{"openapi":"3.0.0","paths":{"/":{"get":{"operationId":"getHello","summary":"Hello World!","parameters":[],"responses":{"200":{"description":"Hello World!","content":{"application/json":{"schema":{"type":"string"}}}}}}},"/upload":{"post":{"operationId":"uploadFile","summary":"Upload a file to our AWS S3 storage bucket","description":"This operation uploads a file to AWS S3 (the TuneIn bucket) and returns the URL of the uploaded file.","tags":["File Upload"],"externalDocs":{"description":"More about file uploads via HTTP POST requests","url":"https://www.postman.com/postman/postman-answers/collection/t38ia1u/upload-a-file-via-post-request"},"parameters":[],"requestBody":{"required":true,"description":"A file to upload to our AWS S3 storage bucket","content":{"multipart/form-data":{"schema":{"type":"object","properties":{"file":{"type":"string","format":"binary"}}}}}},"responses":{"200":{"description":"The URL of the uploaded file","content":{"application/json":{"schema":{"type":"string"}}}}},"security":[{"bearer":[]},{"bearer":[]}]}},"/users":{"get":{"operationId":"getProfile","summary":"Get current user's profile info","description":"Get the profile info of the currently authenticated user.","parameters":[],"responses":{"200":{"description":"Successfully returned user profile info.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]},"put":{"operationId":"putProfile","summary":"Update user's profile info","description":"Update the profile info of the currently authenticated user.","parameters":[],"requestBody":{"required":true,"description":"The updated user profile info","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserDto"}}}},"responses":{"200":{"description":"Returns the updated user profile info.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"400":{"description":"Bad request. The request body may be malformed."}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]},"patch":{"operationId":"patchProfile","summary":"Update user's profile info","description":"Update the profile info of the currently authenticated user.","parameters":[],"requestBody":{"required":true,"description":"The updated user profile info","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserDto"}}}},"responses":{"200":{"description":"Returns the updated user profile info.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"400":{"description":"Bad request. The request body may be malformed."}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/dms":{"get":{"operationId":"getDMs","summary":"Get the last DMs sent to or received from another user","description":"Get all of the last DMs either sent to or received from another user","parameters":[],"responses":{"200":{"description":"The last DMs as an array of DirectMessageDto.","content":{"application/json":{"schema":{"type":"object"}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/rooms":{"get":{"operationId":"getUserRooms","summary":"Get the user's rooms","description":"Get all of the rooms that the user created.","parameters":[],"responses":{"200":{"description":"The user's rooms as an array of RoomDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RoomDto"}}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]},"post":{"operationId":"createRoom","summary":"Create a new room","description":"Create a new room with the given information.","parameters":[],"requestBody":{"required":true,"description":"The room to create","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRoomDto"}}}},"responses":{"200":{"description":"The newly created room as a RoomDto.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoomDto"}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/rooms/recent":{"get":{"operationId":"getRecentRooms","summary":"Get a user's recent rooms","description":"Get the user's most recently visited rooms.","parameters":[],"responses":{"200":{"description":"The user's recent rooms as an array of RoomDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RoomDto"}}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/rooms/foryou":{"get":{"operationId":"getRecommendedRooms","summary":"Get a user's recommended rooms","description":"Get the rooms that are recommended for the user.","parameters":[],"responses":{"200":{"description":"The user's recommended rooms as an array of RoomDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RoomDto"}}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/rooms/current":{"get":{"operationId":"getCurrentRoom","summary":"Get a user's current room","description":"Get the room that the user is currently in.","parameters":[],"responses":{"200":{"description":"The user's current room as a RoomDto or {} if they are not in a room.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoomDto"}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/friends":{"get":{"operationId":"getUserFriends","summary":"Get a user's friends","parameters":[],"responses":{"200":{"description":"The user's friends as an array of UserDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserDto"}}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/friends/requests":{"get":{"operationId":"getFriendRequests","summary":"Get a user's friend requests","parameters":[],"responses":{"200":{"description":"The user's friend requests as an array of UserDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserDto"}}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/followers":{"get":{"operationId":"getFollowers","summary":"Get a user's followers","description":"Get all of the users that follow the authenticated user.","parameters":[{"name":"none","required":true,"in":"path","schema":{}}],"responses":{"200":{"description":"The user's followers as an array of UserDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserDto"}}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/following":{"get":{"operationId":"getFollowing","summary":"Get a user's following","description":"Get all of the users that the authenticated user follows.","parameters":[],"responses":{"200":{"description":"The user's following as an array of UserDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserDto"}}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/bookmarks":{"get":{"operationId":"getBookmarks","summary":"Get the authorized user's bookmarks","description":"Get all of the rooms that the user has bookmarked.","parameters":[],"responses":{"200":{"description":"The user's bookmarks as an array of RoomDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RoomDto"}}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/{username}":{"get":{"operationId":"getProfileByUsername","summary":"Get user profile info by username","description":"Get the profile info of the user with the given username.","parameters":[{"name":"username","required":true,"in":"path","description":"The username of the user to fetch profile info for.","example":"johndoe","allowEmptyValue":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the user profile.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/{username}/follow":{"post":{"operationId":"followUser","summary":"Follow the given user","description":"Follow the user with the given username.","parameters":[{"name":"username","required":true,"in":"path","description":"The username of the user to follow.","example":"johndoe","allowEmptyValue":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successfully followed the user.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"description":"Error following the user.","content":{"application/json":{"schema":{"type":"boolean"}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/{username}/unfollow":{"post":{"operationId":"unfollowUser","summary":"Unfollow the given user","description":"Unfollow the user with the given username.","parameters":[{"name":"username","required":true,"in":"path","description":"The username of the user to unfollow.","example":"johndoe","allowEmptyValue":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successfully unfollowed the user.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"description":"Error unfollowing the user.","content":{"application/json":{"schema":{"type":"boolean"}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/{username}/befriend":{"post":{"operationId":"befriendUser","summary":"Send a friend request to the given user","description":"Send a friend request to the user with the given username.","parameters":[{"name":"username","required":true,"in":"path","description":"The username of the user to send a friend request to.","example":"johndoe","allowEmptyValue":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successfully sent friend request.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"description":"Error sending friend request.","content":{"application/json":{"schema":{"type":"boolean"}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/{username}/unfriend":{"post":{"operationId":"unfriendUser","summary":"End friendship with the given user","description":"End friendship with the user with the given username.","parameters":[{"name":"username","required":true,"in":"path","description":"The username of the user to end friendship with.","example":"johndoe","allowEmptyValue":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successfully ended friendship.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"description":"Error ending friendship.","content":{"application/json":{"schema":{"type":"boolean"}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/{username}/accept":{"post":{"operationId":"acceptFriendRequest","summary":"Accept a friend request from the given user","description":"Accept a friend request from the user with the given username.","parameters":[{"name":"username","required":true,"in":"path","description":"Our new friend. The username of the user to accept a friend request from.","example":"johndoe","allowEmptyValue":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successfully accepted friend request.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"description":"Error accepting friend request.","content":{"application/json":{"schema":{"type":"boolean"}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/users/{username}/reject":{"post":{"operationId":"rejectFriendRequest","summary":"Reject a friend request from the given user","description":"Reject a friend request from the user with the given username.","parameters":[{"name":"username","required":true,"in":"path","description":"The username of the user whose friend request we are rejecting.","example":"johndoe","allowEmptyValue":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successfully rejected friend request.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"description":"Error rejecting friend request.","content":{"application/json":{"schema":{"type":"boolean"}}}}},"tags":["users"],"security":[{"bearer":[]},{"bearer":[]}]}},"/auth/login":{"post":{"operationId":"login","summary":"Authenticate a user using a Cognito JWT token","description":"This method will authenticate a user using a Cognito JWT token. The token is decoded and verified, and a new JWT token is generated and returned. See https://jwt.io/ for more information on JWT tokens.","parameters":[],"requestBody":{"required":true,"description":"Cognito JWT token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginBody"},"examples":{"token":{"value":"(see https://jwt.io/)"}}}}},"responses":{"200":{"description":"User successfully logged in. JWT token returned.","content":{"application/json":{"schema":{"type":"string"}}}},"403":{"description":"Forbidden."}},"tags":["auth"]}},"/auth/register":{"post":{"operationId":"register","summary":"Register a new user in the API using Cognito","description":"This method will register a new user in the API using Cognito. The user's Cognito username, email, and Cognito sub ID are required. The user will be created in the our database and will be able to authenticate using the Cognito JWT token.","parameters":[],"requestBody":{"required":true,"description":"User's Cognito information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterBody"},"examples":{"register":{"value":{"username":"cognito-username","email":"john@example.com","userCognitoSub":"cognito-sub-id"}}}}}},"responses":{"200":{"description":"User successfully registered.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterBody"}}}},"400":{"description":"Bad request."}},"tags":["auth"]}},"/auth/refresh":{"post":{"operationId":"refresh","summary":"Refresh an expired (or almost expired) JWT token","description":"This method will refresh an expired (or almost expired) JWT token. The expired token is sent in the request body, and a new JWT token is generated and returned. The new token will have a new expiration date.","parameters":[],"requestBody":{"required":true,"description":"The expired JWT token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefreshBody"},"examples":{"register":{"value":{"username":"cognito-username","email":"john@example.com","userCognitoSub":"cognito-sub-id"}}}}}},"responses":{"200":{"description":"JWT token successfully refreshed.","content":{"application/json":{"schema":{"type":"string"}}}},"400":{"description":"Bad request."},"401":{"description":"Unauthorized."}},"tags":["auth"]}},"/auth/spotify/redirect":{"get":{"operationId":"spotifyRedirect","summary":"Spotify OAuth Redirect","description":"Redirects to the Expo app with the Spotify auth code","parameters":[{"name":"code","required":true,"in":"query","description":"The authorization code returned by Spotify after user consent","example":"NApCCg..BkWtQ","allowEmptyValue":false,"schema":{"type":"string"}},{"name":"state","required":true,"in":"query","description":"A unique state value to prevent CSRF attacks","example":"34fFs29kd09","allowEmptyValue":false,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["auth"]}},"/auth/spotify/callback":{"get":{"operationId":"spotifyCallback","summary":"Callback for Spotify Auth","description":"Handles the Spotify auth callback, creates an account for the user (if necessary), authenticates the user, and returns a JWT token","parameters":[{"name":"code","required":true,"in":"query","description":"The authorization code returned by Spotify after user consent","example":"NApCCg..BkWtQ","allowEmptyValue":false,"schema":{"type":"string"}},{"name":"state","required":true,"in":"query","description":"A unique state value to prevent CSRF attacks","example":"34fFs29kd09","allowEmptyValue":false,"schema":{"type":"string"}}],"responses":{"201":{"description":"The record has been successfully created.","content":{"application/json":{"schema":{"type":"string"}}}},"403":{"description":"Forbidden."}},"tags":["auth"]}},"/auth/spotify/tokens":{"get":{"operationId":"getSpotifyTokens","summary":"Get Spotify Auth Tokens","description":"Returns the user's Spotify Auth Tokens","parameters":[],"responses":{"200":{"description":"The user's Spotify Auth Tokens","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SpotifyTokenResponse"}}}},"404":{"description":"User not found"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["auth"]}},"/auth/spotify/refresh":{"get":{"operationId":"refreshSpotifyTokens","summary":"Manually Refresh Spotify Auth Tokens","description":"This method will manually refresh the user's Spotify Auth Tokens and return the new tokens","parameters":[],"responses":{"200":{"description":"The user's new Spotify Auth Tokens","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SpotifyTokenResponse"}}}},"404":{"description":"User not found"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["auth"]}},"/rooms/new":{"get":{"operationId":"getNewRooms","summary":"Get newly created public rooms","description":"Returns the new public rooms as an array of RoomDto.","parameters":[{"name":"none","required":true,"in":"path","schema":{}}],"responses":{"200":{"description":"The new public rooms as an array of RoomDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RoomDto"}}}}}},"tags":["rooms"]}},"/rooms/{roomID}":{"get":{"operationId":"getRoomInfo","summary":"Get room info","description":"Returns the room info as a RoomDto.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get info for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"The room info as a RoomDto.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoomDto"}}}},"400":{"description":"Room not found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoomDto"}}}}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]},"patch":{"operationId":"updateRoomInfo","summary":"Update room info","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to update.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"requestBody":{"required":true,"description":"The updated room info","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateRoomDto"}}}},"responses":{"200":{"description":"Room info updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoomDto"}}}},"404":{"description":"Room not found."}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]},"put":{"operationId":"putRoomInfo","summary":"Update room info","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to update.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"requestBody":{"required":true,"description":"The updated room info","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateRoomDto"}}}},"responses":{"200":{"description":""}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]},"delete":{"operationId":"deleteRoom","summary":"Delete a room","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to delete.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"Room deleted successfully.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"description":"User is not the creator of the room.","content":{"application/json":{"schema":{"type":"boolean"}}}}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]}},"/rooms/{roomID}/join":{"post":{"operationId":"joinRoom","summary":"Join a room","description":"Adds the current user as a participant to the room.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to join.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"User joined room successfully.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"description":"User already in room.","content":{"application/json":{"schema":{"type":"boolean"}}}}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]}},"/rooms/{roomID}/leave":{"post":{"operationId":"leaveRoom","summary":"Leave a room","description":"Removes the current user as a participant to the room.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to leave.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"User left room successfully.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"description":"User not in room.","content":{"application/json":{"schema":{"type":"boolean"}}}}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]}},"/rooms/{roomID}/users":{"get":{"operationId":"getRoomUsers","summary":"Get users in a room","description":"Returns the users in the room as an array of UserDto.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get users for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"The users in the room as an array of UserDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserDto"}}}}}},"tags":["rooms"]}},"/rooms/{roomID}/songs":{"get":{"operationId":"getRoomQueue","summary":"Get the queue of a room","description":"Returns the queue of the room as an array of SongInfoDto.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get the queue for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"The queue of the room as an array of SongInfoDto."},"401":{"description":"Unauthorized"},"404":{"description":"Room not found"}},"tags":["rooms"]},"delete":{"operationId":"clearRoomQueue","summary":"Clear the queue of a room","description":"Clears the queue of the room except for the current song.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to clear the queue for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":""}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]},"post":{"operationId":"addSongToQueue","summary":"Add a song to the queue of a room","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to add the song to.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"string"}}}},"responses":{"200":{"description":"The queue of the room as an array of SongInfoDto."},"401":{"description":"Unauthorized"},"404":{"description":"Room not found"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]}},"/rooms/{roomID}/songs/current":{"get":{"operationId":"getCurrentSong","summary":"Get the current song of a room","description":"Get the song currently playing in the room.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get the current song for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":""}},"tags":["rooms"]}},"/rooms/{roomID}/chat/history":{"get":{"operationId":"getLiveChatHistory","summary":"Get the chat history of a room","description":"Returns the chat history of the room as an array of LiveChatMessageDto.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get the chat history for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"The chat history as an array of LiveChatMessageDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LiveChatMessageDto"}}}}}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]}},"/rooms/{roomID}/bookmark":{"post":{"operationId":"bookmarkRoom","summary":"Bookmark a room","description":"Adds the room to the user's bookmarks.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to bookmark.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"Room bookmarked successfully"},"401":{"description":"Unauthorized"},"404":{"description":"Room not found"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]}},"/rooms/{roomID}/unbookmark":{"post":{"operationId":"unbookmarkRoom","summary":"Unbookmark a room","description":"Removes the room from the user's bookmarks.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to unbookmark.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"Room unbookmarked successfully"},"401":{"description":"Unauthorized"},"404":{"description":"Room not found"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]}},"/rooms/{roomID}/analytics":{"get":{"operationId":"getRoomAnalytics","summary":"Get room analytics","description":"Returns the analytics of the room as a RoomAnalyticsDto.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get analytics for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"The analytics of the room as a RoomAnalyticsDto."},"401":{"description":"Unauthorized"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["room analytics"]}},"/rooms/{roomID}/analytics/queue":{"get":{"operationId":"getRoomQueueAnalytics","summary":"Get room queue analytics","description":"Returns the queue analytics of the room as a RoomAnalyticsQueueDto.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get queue analytics for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"The queue analytics of the room as a RoomAnalyticsQueueDto."},"401":{"description":"Unauthorized"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["room analytics"]}},"/rooms/{roomID}/analytics/participation":{"get":{"operationId":"getRoomParticipationAnalytics","summary":"Get room participation analytics","description":"Returns the participation analytics of the room as a RoomAnalyticsParticipationDto.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get participation analytics for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"The participation analytics of the room as a RoomAnalyticsParticipationDto."},"401":{"description":"Unauthorized"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["room analytics"]}},"/rooms/{roomID}/analytics/interactions":{"get":{"operationId":"getRoomInteractionAnalytics","summary":"Get room interaction analytics","description":"Returns the interaction analytics of the room as a RoomAnalyticsInteractionsDto.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get interaction analytics for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"The interaction analytics of the room as a RoomAnalyticsInteractionsDto."},"401":{"description":"Unauthorized"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["room analytics"]}},"/rooms/{roomID}/analytics/votes":{"get":{"operationId":"getRoomVotesAnalytics","summary":"Get room voting analytics","description":"Returns the voting analytics of the room as a RoomAnalyticsVotesDto.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get voting analytics for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"The voting analytics of the room as a RoomAnalyticsVotesDto."},"401":{"description":"Unauthorized"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["room analytics"]}},"/rooms/{roomID}/analytics/songs":{"get":{"operationId":"getRoomSongsAnalytics","summary":"Get room song analytics","description":"Returns the song analytics of the room as a RoomAnalyticsSongsDto.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get song analytics for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"The song analytics of the room as a RoomAnalyticsSongsDto."},"401":{"description":"Unauthorized"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["room analytics"]}},"/rooms/{roomID}/analytics/contributors":{"get":{"operationId":"getRoomContributorsAnalytics","summary":"Get room contributor analytics","description":"Returns the contributor analytics of the room as a RoomAnalyticsContributorsDto.","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to get contributor analytics for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"The contributor analytics of the room as a RoomAnalyticsContributorsDto."},"401":{"description":"Unauthorized"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["room analytics"]}},"/rooms/analytics":{"get":{"operationId":"getKeyMetrics","summary":"Get key metrics for user's rooms","description":"Returns the key metrics for the user's rooms as a RoomAnalyticsKeyMetricsDto.","parameters":[],"responses":{"200":{"description":"The key metrics for the user's rooms as a RoomAnalyticsKeyMetricsDto."},"401":{"description":"Unauthorized"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["room analytics"]}},"/rooms/{roomID}/archive/playlist":{"post":{"operationId":"RoomsController_archiveRoomSongs","summary":"Archive a room's songs","parameters":[{"name":"roomID","required":true,"in":"path","description":"The ID of the room to archive songs for.","example":"123e4567-e89b-12d3-a456-426614174000","allowEmptyValue":false,"schema":{"format":"uuid","type":"string"}}],"responses":{"200":{"description":"Room songs archived successfully"},"401":{"description":"Unauthorized"},"404":{"description":"Room not found"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]}},"/rooms/archive/playlist":{"get":{"operationId":"RoomsController_getArchivedSongs","summary":"Get a user's archived songs","parameters":[],"responses":{"200":{"description":"User's archived songs retrieved successfully"},"401":{"description":"Unauthorized"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]}},"/rooms/archive/playlist/{playlistID}":{"delete":{"operationId":"RoomsController_deleteArchivedSongs","summary":"Delete a user's archived songs","parameters":[{"name":"playlistID","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"User's archived songs deleted successfully"},"401":{"description":"Unauthorized"},"404":{"description":"Playlist not found"}},"security":[{"bearer":[]},{"bearer":[]}],"tags":["rooms"]}},"/search":{"get":{"operationId":"search","summary":"Search for rooms and users","description":"Search for rooms and users by room name, creator name or username.","parameters":[{"name":"q","required":true,"in":"query","description":"A room name / username","example":{"room_name":{"value":"Chill Room"},"username":{"value":"johndoe123"}},"allowEmptyValue":false,"schema":{"type":"string"}},{"name":"creator","required":false,"in":"query","description":"A room creator's profile name or username","examples":{"profile_name":{"value":"John Doe"},"username":{"value":"johndoe123"}},"schema":{"type":"string"}}],"responses":{"200":{"description":"Search results as an array of mixed UserDto and RoomDto.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CombinedSearchResults"}}}},"400":{"description":"Invalid query parameters"}},"tags":["search"]}},"/search/rooms":{"get":{"operationId":"searchRooms","summary":"Search for rooms","description":"Search for rooms by room name or creator name / username.","parameters":[{"name":"q","required":true,"in":"query","description":"A room name","example":"Chill Room","allowEmptyValue":false,"schema":{"type":"string"}},{"name":"creator","required":false,"in":"query","description":"A room creator's profile name / username","examples":{"profile_name":{"value":"John Doe"},"username":{"value":"johndoe123"}},"allowEmptyValue":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Search results as an array of RoomDto."},"400":{"description":"Invalid query parameters"}},"tags":["search"]}},"/search/history":{"get":{"operationId":"searchHistory","summary":"Get search history (including objects discovered from search)","parameters":[],"responses":{"200":{"description":"Search history as an array of strings or RoomDto, or UserDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CombinedSearchHistory"}}}}}},"tags":["search"],"security":[{"bearer":[]},{"bearer":[]}]},"delete":{"operationId":"clearSearchHistory","summary":"Clear search history","description":"Clear search history for the user.","parameters":[],"responses":{"200":{"description":"Search history cleared"}},"tags":["search"],"security":[{"bearer":[]},{"bearer":[]}]}},"/search/rooms/advanced":{"get":{"operationId":"advancedSearchRooms","summary":"Advanced search for rooms","description":"Advanced search for rooms by various parameters.","parameters":[{"name":"q","required":true,"in":"query","description":"A room name","example":"Chill Room","allowEmptyValue":false,"schema":{"type":"string"}},{"name":"creator_username","required":false,"in":"query","description":"A room creator's username","example":"johndoe123","allowEmptyValue":false,"schema":{"type":"string"}},{"name":"creator_name","required":false,"in":"query","description":"A room creator's profile name","example":"John Doe","allowEmptyValue":false,"schema":{"type":"string"}},{"name":"participant_count","required":false,"in":"query","description":"Minimum number of participants","example":5,"allowEmptyValue":false,"schema":{"type":"number"}},{"name":"description","required":false,"in":"query","description":"A string to find in the room description","example":"chill","allowEmptyValue":false,"schema":{"type":"string"}},{"name":"is_temp","required":false,"in":"query","description":"Is the room temporary?","schema":{"type":"boolean"}},{"name":"is_priv","required":false,"in":"query","description":"Is the room private?","schema":{"type":"boolean"}},{"name":"is_scheduled","required":false,"in":"query","description":"Is the room scheduled?","schema":{"type":"boolean"}},{"name":"start_date","required":false,"in":"query","description":"Only if scheduled, the start date","schema":{"type":"string"}},{"name":"end_date","required":false,"in":"query","description":"Only if scheduled, the end date","schema":{"type":"string"}},{"name":"lang","required":false,"in":"query","description":"The room language (as a ISO 639-1 code)","schema":{"type":"string"}},{"name":"explicit","required":false,"in":"query","description":"Is the room explicit?","schema":{"type":"boolean"}},{"name":"nsfw","required":false,"in":"query","description":"Is the room NSFW?","schema":{"type":"boolean"}},{"name":"tags","required":false,"in":"query","description":"A comma separated list of tags to compare","schema":{"type":"string"}}],"responses":{"200":{"description":"Search results as an array of RoomDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RoomDto"}}}}},"400":{"description":"Invalid query parameters"}},"tags":["search"]}},"/search/rooms/history":{"get":{"operationId":"searchRoomsHistory","summary":"Get recently searched rooms","description":"Get recently searched rooms by the user.","parameters":[],"responses":{"200":{"description":"Recently searched rooms as an array of SearchHistoryDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SearchHistoryDto"}}}}},"400":{"description":"Invalid query parameters"}},"tags":["search"],"security":[{"bearer":[]},{"bearer":[]}]},"delete":{"operationId":"clearRoomsHistory","summary":"Clear room search history","description":"Clear room search history for the user.","parameters":[],"responses":{"200":{"description":"Room search history cleared"}},"tags":["search"],"security":[{"bearer":[]},{"bearer":[]}]}},"/search/users":{"get":{"operationId":"searchUsers","summary":"Search for users","description":"Search for users by username or profile name.","parameters":[{"name":"q","required":true,"in":"query","description":"A username or profile name","examples":{"username":{"value":"johndoe123"},"profile_name":{"value":"John Doe"}},"allowEmptyValue":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Search results as an array of UserDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserDto"}}}}},"400":{"description":"Invalid query parameters"}},"tags":["search"]}},"/search/users/advanced":{"get":{"operationId":"advancedSearchUsers","summary":"Advanced search for users","description":"Advanced search for users by various parameters.","parameters":[{"name":"q","required":true,"in":"query","description":"A username or profile name","examples":{"username":{"value":"johndoe123"},"profile_name":{"value":"John Doe"}},"allowEmptyValue":false,"schema":{"type":"string"}},{"name":"creator_username","required":false,"in":"query","description":"A user's username","example":"johndoe123","allowEmptyValue":false,"schema":{"type":"string"}},{"name":"creator_name","required":false,"in":"query","description":"A user's profile name","example":"John Doe","allowEmptyValue":false,"schema":{"type":"string"}},{"name":"following","required":false,"in":"query","description":"Minimum number of following","example":10,"allowEmptyValue":false,"schema":{"type":"number"}},{"name":"followers","required":false,"in":"query","description":"Minimum number of followers","example":10,"allowEmptyValue":false,"schema":{"type":"number"}}],"responses":{"200":{"description":"Search results as an array of UserDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserDto"}}}}},"400":{"description":"Invalid query parameters"}},"tags":["search"]}},"/search/users/history":{"get":{"operationId":"searchUsersHistory","summary":"Get recently searched users","description":"Get recently searched users by the user.","parameters":[],"responses":{"200":{"description":"Recently searched users as an array of SearchHistoryDto.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SearchHistoryDto"}}}}},"400":{"description":"Invalid query parameters"}},"tags":["search"],"security":[{"bearer":[]},{"bearer":[]}]},"delete":{"operationId":"clearUsersHistory","summary":"Clear user search history","description":"Clear user search history for the user.","parameters":[],"responses":{"200":{"description":"User search history cleared"}},"tags":["search"],"security":[{"bearer":[]},{"bearer":[]}]}},"/genres":{"get":{"operationId":"GenresController_getAllGenres","summary":"Get all genres","parameters":[],"responses":{"200":{"description":"List of all genres","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}},"400":{"description":"Something went wrong while fetching genres","content":{"application/json":{"schema":{"type":"string"}}}}},"tags":["genres"]}}},"info":{"title":"TuneIn API","description":"The API for the TuneIn application, handling all the backend logic and making it available to the frontend.","version":"1.0","contact":{}},"tags":[],"servers":[{"url":"http://localhost:3000","description":"Development server"},{"url":"https://tunein.co.za:3000","description":"Production server"}],"components":{"securitySchemes":{"bearer":{"scheme":"Bearer","bearerFormat":"Bearer","description":"Please enter token in following format: Bearer <JWT>","name":"Authorization","type":"http","in":"Header"}},"schemas":{"SongInfoDto":{"type":"object","properties":{"title":{"type":"string"},"artists":{"type":"array","items":{"type":"string"}},"cover":{"type":"string"},"start_time":{"type":"object"}},"required":["title","artists","cover","start_time"]},"UserDto":{"type":"object","properties":{"profile_name":{"type":"string"},"userID":{"type":"string"},"username":{"type":"string"},"profile_picture_url":{"type":"string"},"followers":{"type":"object"},"following":{"type":"object"},"links":{"type":"object"},"bio":{"type":"string"},"current_song":{"$ref":"#/components/schemas/SongInfoDto"},"fav_genres":{"type":"object"},"fav_songs":{"type":"object"},"fav_rooms":{"type":"object"},"recent_rooms":{"type":"object"},"friendship":{"type":"object"}},"required":["profile_name","userID","username","profile_picture_url","followers","following","links","bio","current_song","fav_genres","fav_songs","fav_rooms","recent_rooms"]},"UpdateUserDto":{"type":"object","properties":{"profile_name":{"type":"string"},"userID":{"type":"string"},"username":{"type":"string"},"profile_picture_url":{"type":"string"},"followers":{"type":"object"},"following":{"type":"object"},"links":{"type":"object"},"bio":{"type":"string"},"current_song":{"$ref":"#/components/schemas/SongInfoDto"},"fav_genres":{"type":"object"},"fav_songs":{"type":"object"},"fav_rooms":{"type":"object"},"recent_rooms":{"type":"object"},"friendship":{"type":"object"}}},"RoomDto":{"type":"object","properties":{"creator":{"$ref":"#/components/schemas/UserDto"},"roomID":{"type":"string"},"participant_count":{"type":"number"},"room_name":{"type":"string"},"description":{"type":"string"},"is_temporary":{"type":"boolean"},"is_private":{"type":"boolean"},"is_scheduled":{"type":"boolean"},"start_date":{"format":"date-time","type":"string"},"end_date":{"format":"date-time","type":"string"},"language":{"type":"string"},"has_explicit_content":{"type":"boolean"},"has_nsfw_content":{"type":"boolean"},"room_image":{"type":"string"},"current_song":{"$ref":"#/components/schemas/SongInfoDto"},"tags":{"type":"array","items":{"type":"string"}}},"required":["creator","roomID","participant_count","room_name","description","is_temporary","is_private","is_scheduled","start_date","end_date","language","has_explicit_content","has_nsfw_content","room_image","current_song","tags"]},"CreateRoomDto":{"type":"object","properties":{"room_name":{"type":"string"},"description":{"type":"string"},"is_temporary":{"type":"boolean"},"is_private":{"type":"boolean"},"is_scheduled":{"type":"boolean"},"start_date":{"format":"date-time","type":"string"},"end_date":{"format":"date-time","type":"string"},"language":{"type":"string"},"has_explicit_content":{"type":"boolean"},"has_nsfw_content":{"type":"boolean"},"room_image":{"type":"string"},"tags":{"type":"array","items":{"type":"string"}}},"required":["room_name","description","tags"]},"LoginBody":{"type":"object","properties":{"token":{"type":"string","description":"The Cognito JWT token"}},"required":["token"]},"RegisterBody":{"type":"object","properties":{"username":{"type":"string","description":"The user's username"},"userCognitoSub":{"type":"string","description":"The user's Cognito sub/ID"},"email":{"type":"string","description":"The user's email address"}},"required":["username","userCognitoSub","email"]},"RefreshBody":{"type":"object","properties":{"refreshToken":{"type":"string","description":"The JWT token to be refreshed"}},"required":["refreshToken"]},"SpotifyTokenResponse":{"type":"object","properties":{"access_token":{"type":"string"},"token_type":{"type":"string"},"scope":{"type":"string"},"expires_in":{"type":"number"},"refresh_token":{"type":"string"}},"required":["access_token","token_type","scope","expires_in","refresh_token"]},"UpdateRoomDto":{"type":"object","properties":{"room_name":{"type":"string"},"description":{"type":"string"},"is_temporary":{"type":"boolean"},"is_private":{"type":"boolean"},"is_scheduled":{"type":"boolean"},"start_date":{"format":"date-time","type":"string"},"end_date":{"format":"date-time","type":"string"},"language":{"type":"string"},"has_explicit_content":{"type":"boolean"},"has_nsfw_content":{"type":"boolean"},"room_image":{"type":"string"},"tags":{"type":"array","items":{"type":"string"}}}},"LiveChatMessageDto":{"type":"object","properties":{"messageBody":{"type":"string"},"sender":{"$ref":"#/components/schemas/UserDto"},"roomID":{"type":"string"},"dateCreated":{"format":"date-time","type":"string"}},"required":["messageBody","sender","roomID"]},"CombinedSearchResults":{"type":"object","properties":{"rooms":{"description":"List of rooms","type":"array","items":{"$ref":"#/components/schemas/RoomDto"}},"users":{"description":"List of users","type":"array","items":{"$ref":"#/components/schemas/UserDto"}}},"required":["rooms","users"]},"CombinedSearchHistory":{"type":"object","properties":{"results":{"description":"Mixed list of rooms, users, or strings","type":"array","items":{"type":"string"}}},"required":["results"]},"SearchHistoryDto":{"type":"object","properties":{"search_term":{"type":"string"},"search_time":{"format":"date-time","type":"string"},"url":{"type":"string"}},"required":["search_term","search_time","url"]}}}}