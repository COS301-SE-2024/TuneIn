name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - frontend/tunein
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
        if: matrix.path != 'frontend/tunein'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        if: matrix.path == 'frontend/tunein'

      - name: Install dependencies for Node.js projects
        run: npm install
        working-directory: ${{ matrix.path }}
        if: matrix.path != 'frontend/tunein'

      - name: Install Flutter dependencies
        run: flutter pub get
        working-directory: ${{ matrix.path }}
        if: matrix.path == 'frontend/tunein'

      - name: Lint code for Node.js projects
        run: npm run lint
        working-directory: ${{ matrix.path }}
        if: matrix.path != 'frontend/tunein'

      - name: Lint Flutter code
        run: flutter analyze
        working-directory: ${{ matrix.path }}
        if: matrix.path == 'frontend/tunein'

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - frontend/tunein
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
        if: matrix.path != 'frontend/tunein'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        if: matrix.path == 'frontend/tunein'

      - name: Install dependencies for Node.js projects
        run: npm install
        working-directory: ${{ matrix.path }}
        if: matrix.path != 'frontend/tunein'

      - name: Install Flutter dependencies
        run: flutter pub get
        working-directory: ${{ matrix.path }}
        if: matrix.path == 'frontend/tunein'

      - name: Build for Node.js projects
        run: npm run build
        working-directory: ${{ matrix.path }}
        if: matrix.path != 'frontend/tunein'

      - name: Build Flutter app
        run: flutter build apk --release
        working-directory: ${{ matrix.path }}
        if: matrix.path == 'frontend/tunein'

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - frontend/tunein
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
        if: matrix.path != 'frontend/tunein'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        if: matrix.path == 'frontend/tunein'

      - name: Install dependencies for Node.js projects
        run: npm install
        working-directory: ${{ matrix.path }}
        if: matrix.path != 'frontend/tunein'

      - name: Install Flutter dependencies
        run: flutter pub get
        working-directory: ${{ matrix.path }}
        if: matrix.path == 'frontend/tunein'

      - name: Run tests for Node.js projects
        run: npm test
        working-directory: ${{ matrix.path }}
        if: matrix.path != 'frontend/tunein'

      - name: Run Flutter tests
        run: flutter test
        working-directory: ${{ matrix.path }}
        if: matrix.path == 'frontend/tunein'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}