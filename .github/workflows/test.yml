name: Test Codebase
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: write

jobs:
  start:
    name: Initial Setup
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Starting Job
        run: echo "Beginning to test ${{ github.repository }}"

  test_codebase:
    name: Test ${{ matrix.component }}
    needs: start
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - component: Frontend
            directory: frontend
            env_file: ${{ secrets.FRONTEND_ENV_FILE }}
          - component: Backend
            directory: backend
            env_file: ${{ secrets.BACKEND_ENV_FILE }}
    steps:
      - name: Checkout "${{ github.repository }}"
        uses: actions/checkout@v4

      - name: Create ${{ matrix.component }} env file
        run: |
          mkdir -p ${{ matrix.directory }}
          echo "${{ matrix.env_file }}" > ${{ matrix.directory }}/.env

      - name: Set up Node (stable)
        uses: actions/setup-node@v4
        with:
          node-version: '18.18'

      - name: Install dependencies
        run: cd ${{ matrix.directory }} && npm ci

      - name: Test Codebase
        run: cd ${{ matrix.directory }} && npm run test:cov

      - name: Jest Coverage Comment
        id: coverageComment
        uses: MishaKav/jest-coverage-comment@main
        with:
          hide-comment: true
          coverage-summary-path: ./${{ matrix.directory }}/coverage/coverage-summary.json

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Check the output coverage
        run: |
          echo "Coverage Percentage - ${{ steps.coverageComment.outputs.coverage }}"
          echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
          echo "Summary HTML - ${{ steps.coverageComment.outputs.summaryHtml }}"

  end:
    name: The end
    runs-on: ubuntu-latest
    needs: test_codebase
    steps:
      - name: Ending
        run: echo "${{ github.repository }} has passed all tests"